# Default values for tiki.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: tikiwiki/tikiwiki
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 26.2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: tiki.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: tiki-tls
  #    hosts:
  #      - tiki.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Persistence Parameters
persistence:
  enabled: true

  files:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

  imgTrackers:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

  imgWikiUp:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

  imgWiki:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

  modulesCache:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

  storage:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

  temp:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

  sessions:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
    dataSource: {}
    existingClaim: ""
    selector: {}
    annotations: {}

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# MariaDB chart configuration
# ref: https://github.com/bitnami/charts/blob/main/bitnami/mariadb/values.yaml
#
mariadb:
  # Deploy a MariaDB server to satisfy the applications database requirements
  # To use an external database set this to false and configure the `externalDatabase.*` parameters
  enabled: true

  # Allowed values: `standalone` or `replication`
  architecture: standalone

  # MariaDB Authentication parameters
  auth:
    rootPassword: ""
    database: tikiwiki
    username: tiki
    password: ""

  # MariaDB Primary configuration
  primary:
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 1Gi

    # MariaDB primary container's resource requests and limits
    # ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    #
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #
    # Set container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge).
    # This is ignored if primary.resources is set (primary.resources is recommended for production).
    # More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    resourcesPreset: "micro"

    # Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    resources: {}
    #  requests:
    #    cpu: 2
    #    memory: 512Mi
    #  limits:
    #    cpu: 3
    #    memory: 1024Mi

# External Database Configuration
# All of these values are only used if `mariadb.enabled=false`
externalDatabase:
  host: localhost
  port: 3306
  user: tiki
  password: ""
  database: tikiwiki
  # The name of an existing secret with database credentials. Evaluated as a template
  # NOTE: Must contain key `mariadb-password`
  # NOTE: When it's set, the `externalDatabase.password` parameter is ignored
  existingSecret: ""
